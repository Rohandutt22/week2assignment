1. use mongotest
2.db.employee.insertOne({'id':1,'fname':'rohan', 'city':'una','salary':[1,2,3,4,5,6,7,8,9,10,11,12]})
3.db.employee.insertOne({'id':1,'fname':'robin', 'city':'una','salary':[1,2,3,4,5,6,7,8,9,10,11,12]})
4. db.employee.insertOne({'id':2331,'fname':'robert', 'city':'usa','salary':[1,2,3,4,5,6,7,8,9,10,11,12]})
5. db.employee.insertOne({'id':23310,'fname':'robert whinskey', 'city':'usa','salary':[1,2,12,4,5,6,7,8,9,10,11,12]})
6. db.employee.insertOne({'id':32331,'fname':'qwbert', 'city':'canada','salary':[112,122,3,4,5,6,7,8,9,10,11,12]})
7.db.employee.find()
8.db.employee.find({'id':1})
9.db.employee.updateOne({'fname':'rohan'},{$set:{'age':22}})
10. db.employee.updateMany({'id':1},{$set:{'profile':'sde'}})
11. db.employee.deleteOne({'fname':'robert'})
12.db.employee.deleteMany({'id':1})


asked queries:
1)  to display all the documents in the collection

 solution:db.employee.find()

2.   to display the fields _id, fname  for all the documents in the collection.

solution:db.employee.find({},{'id':1,'fname':1})

3. .  to display the all fields   but exclude the field id for all the documents in the collection.

solution :db.employee.find({},{'id':0})

4    to display the first 5 Employees  

solution :  db.employee.find().limit(5)

5.  to display the next 5 Employees after skipping first 5  

solution: db.employee.find().skip(5).limit(5)

6.  to find the Employee who stay in Gurgaon city
 
solution :db.employee.find({'city':'gurgaon'})

7.  to find the Employee who jan salary is less than 20000

solution :db.employee.find({'salary.0':{'$lt':2000}})

8.  to find the Employee who jan salary is less than 20000 and who stay in Gurgaon city.

solution :db.employee.find({'city':'gurgaon','salary.0':{'$lt':2}})

9. to find the total salary of jan month for all the employee.

solution :db.employee.aggregate([{$group:{'_id':null,'total':{'$sum':'salary.0'}}}])

10. count how any employee stay in Gurgaon city

solution: db.employee.find({'city':'gurgaon'}).count()
